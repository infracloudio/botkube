{{- if .Values.auditWebhook.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "botkube.name" . }}-audit-webhook
  labels:
    app.kubernetes.io/name: {{ include "botkube.name" . }}
    helm.sh/chart: {{ include "botkube.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: auditwebhook
    app: botkube
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: auditwebhook
      app: botkube
  template:
    metadata:
      labels:
        component: auditwebhook
        app: botkube
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/audit-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "botkube.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/botkube"]
          args: ["auditwebhook"]
          volumeMounts:
            - mountPath: /etc/webhook/certs
              name: webhook-certs
              readOnly: true
            - name: config-volume
              mountPath: "/config"
          env:
            - name: AUDIT_WEBHOOK_TLS_CERT
              value: "/etc/webhook/certs/tls.crt"
            - name: AUDIT_WEBHOOK_TLS_KEY
              value: "/etc/webhook/certs/tls.key"
            - name: AUDIT_WEBHOOK_PORT
              value: "8080"
            - name: CONFIG_PATH
              value: "/config/"
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | quote }}
            - name: METRICS_PORT
              value: {{ .Values.service.targetPort | quote }} 
        {{- if .Values.extraEnv }}
          {{- range $name, $value := .Values.extraEnv }}
            - name: {{ $name }}
              value: {{ quote $value }}
          {{- end }}
        {{- end }}            
      volumes:
        - name: webhook-certs
          projected:
            sources:
            - secret:
                name: {{ include "botkube.fullname" . }}-audit-webhook-certs
        - name: config-volume
          projected:
            sources:
            - configMap:
                name: {{ include "botkube.fullname" . }}-audit-webhook
            - secret:
                name: {{ include "botkube.fullname" . }}-communication-secret
      {{- if .Values.securityContext }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
